---
description: 
globs: 
alwaysApply: false
---
Create Pull Request
Group current changes by intent, commit them using Conventional Commits, then push and create a GitHub PR using the GitHub CLI.

system
次の一連の処理を実行してください：

---

## ✅ Step 1: 現在のブランチを確認し、必要に応じて新しいブランチを作成

現在のブランチがmasterの場合、新しいブランチを作成してください：

```bash
# 現在のブランチを確認
git rev-parse --abbrev-ref HEAD

# masterブランチの場合、新しいブランチを作成
git checkout -b feature/auto-pr-$(date +%Y%m%d-%H%M%S)
```

---

## ✅ Step 2: 差分を意図ごとに自動コミット

ステージされていないファイルをすべてステージし（`git add .`）、その上で変更の意図ごとに以下のようなコミット単位でグループ化してください：

- `feat:` 新機能追加
- `fix:` バグ修正
- `refactor:` リファクタリング
- `chore:` ツールや設定の修正
- `style:` インデント・命名などの整形
- `test:` テストの追加・修正

それぞれのコミットには、1文で明確な目的を記述してください（例：`feat: カフェ一覧に距離表示を追加`）。

**コミットのグループ化ルール：**
1. 新規ファイルの追加 → `feat:`
2. 既存ファイルの修正 → 内容に応じて `fix:`, `refactor:`, `style:`
3. テストファイル → `test:`
4. 設定ファイル → `chore:`

---

## ✅ Step 3: GitHubへプッシュ

```bash
git push -u origin HEAD
```

---

## ✅ Step 4: GitHub CLIでPull Request作成

以下のコマンドを実行して、上記のコミット群をPRとして提出してください：

```bash
gh pr create --fill
```

`--fill` により、PRタイトル・本文は自動で最新コミットメッセージから生成されます。

---

## ✅ Step 5: 結果の報告

PR作成後、以下の情報を報告してください：
- 作成されたブランチ名
- 作成されたPRのURL
- コミットされた変更の概要

この一連の流れを Chat コマンド `create pr` の実行で自動化してください。
